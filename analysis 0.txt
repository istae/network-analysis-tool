Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total
 time   seconds   seconds    calls   s/call   s/call  name
 36.76     51.43    51.43 1779228850     0.00     0.00  isneighbor
 27.30     89.63    38.20  1846101     0.00     0.00  walk_all
 14.14    109.41    19.78                             __fentry__
 12.21    126.49    17.08 3963903121     0.00     0.00  vector_index
  8.98    139.05    12.56                             _mcount_private
  0.35    139.54     0.49  1848029     0.00     0.00  vector_dest
  0.08    139.65     0.11 20272511     0.00     0.00  vector_push
  0.06    139.73     0.09  5396994     0.00     0.00  walk_distance
  0.06    139.81     0.08                             isneighbor_print
  0.05    139.88     0.07        1     0.07   107.47  betweenness
  0.01    139.89     0.01  5294481     0.00     0.00  vector_init
  0.01    139.90     0.01    28274     0.00     0.00  node_list_insert
  0.01    139.91     0.01                             malloc
  0.00    139.91     0.01                             freelist
  0.00    139.92     0.01                             top
  0.00    139.92     0.00    16350     0.00     0.00  _getline
  0.00    139.92     0.00    15243     0.00     0.00  hash
  0.00    139.92     0.00    15242     0.00     0.00  hash_insert
  0.00    139.92     0.00     1926     0.00     0.00  debug
  0.00    139.92     0.00     1926     0.00     0.00  newnode
  0.00    139.92     0.00     1104     0.00     0.00  remove_last
  0.00    139.92     0.00        2     0.00    53.73  cmd
  0.00    139.92     0.00        1     0.00     0.00  hash_find

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.01% of 139.92 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     76.8    0.00  107.48                 main [1]
                0.00  107.47       2/2           cmd [2]
                0.00    0.01   15242/15242       hash_insert [13]
                0.00    0.00    1928/1848029     vector_dest [9]
                0.00    0.00       3/5294481     vector_init [16]
                0.00    0.00       1/3963903121     vector_index [7]
                0.00    0.00   16350/16350       _getline [129]
                0.00    0.00    1104/1104        remove_last [23]
-----------------------------------------------
                0.00  107.47       2/2           main [1]
[2]     76.8    0.00  107.47       2         cmd [2]
                0.07  107.40       1/1           betweenness [3]
-----------------------------------------------
                0.07  107.40       1/1           cmd [2]
[3]     76.8    0.07  107.40       1         betweenness [3]
               38.20   68.60 1846101/1846101     walk_all [4]
                0.49    0.00 1846101/1848029     vector_dest [9]
                0.05    0.02 1853775/1779228850     isneighbor [5]
                0.02    0.00 5292554/3963903121     vector_index [7]
                0.02    0.00 3461799/20272511     vector_push [10]
                0.00    0.00    7674/5294481     vector_init [16]
                0.00    0.00       1/1           hash_find [20]
                0.00    0.00    1926/1926        debug [22]
-----------------------------------------------
               38.20   68.60 1846101/1846101     betweenness [3]
[4]     76.3   38.20   68.60 1846101         walk_all [4]
               51.38   15.32 1777375075/1779228850     isneighbor [5]
                1.72    0.00 400078140/3963903121     vector_index [7]
                0.09    0.00 16791510/20272511     vector_push [10]
                0.09    0.00 5396994/5396994     walk_distance [11]
                0.01    0.00 5284878/5294481     vector_init [16]
-----------------------------------------------
                0.05    0.02 1853775/1779228850     betweenness [3]
               51.38   15.32 1777375075/1779228850     walk_all [4]
[5]     47.7   51.43   15.33 1779228850         isneighbor [5]
               15.33    0.00 3558457700/3963903121     vector_index [7]
-----------------------------------------------
                                                 <spontaneous>
[6]     14.1   19.78    0.00                 __fentry__ [6]
-----------------------------------------------
                0.00    0.00       1/3963903121     hash_find [20]
                0.00    0.00       1/3963903121     main [1]
                0.00    0.00   18177/3963903121     hash_insert [13]
                0.00    0.00   56548/3963903121     node_list_insert [14]
                0.02    0.00 5292554/3963903121     betweenness [3]
                1.72    0.00 400078140/3963903121     walk_all [4]
               15.33    0.00 3558457700/3963903121     isneighbor [5]
[7]     12.2   17.08    0.00 3963903121         vector_index [7]
-----------------------------------------------
                                                 <spontaneous>
[8]      9.0   12.56    0.00                 _mcount_private [8]
-----------------------------------------------
                0.00    0.00    1928/1848029     main [1]
                0.49    0.00 1846101/1848029     betweenness [3]
[9]      0.4    0.49    0.00 1848029         vector_dest [9]
-----------------------------------------------
                0.00    0.00    3852/20272511     newnode [19]
                0.00    0.00   15350/20272511     node_list_insert [14]
                0.02    0.00 3461799/20272511     betweenness [3]
                0.09    0.00 16791510/20272511     walk_all [4]
[10]     0.1    0.11    0.00 20272511         vector_push [10]
-----------------------------------------------
                0.09    0.00 5396994/5396994     walk_all [4]
[11]     0.1    0.09    0.00 5396994         walk_distance [11]
-----------------------------------------------
                                                 <spontaneous>
[12]     0.1    0.08    0.00                 isneighbor_print [12]
-----------------------------------------------
                0.00    0.01   15242/15242       main [1]
[13]     0.0    0.00    0.01   15242         hash_insert [13]
                0.01    0.00   28274/28274       node_list_insert [14]
                0.00    0.00   18177/3963903121     vector_index [7]
                0.00    0.00    1926/1926        newnode [19]
                0.00    0.00   15242/15243       hash [21]
-----------------------------------------------
                0.01    0.00   28274/28274       hash_insert [13]
[14]     0.0    0.01    0.00   28274         node_list_insert [14]
                0.00    0.00   56548/3963903121     vector_index [7]
                0.00    0.00   15350/20272511     vector_push [10]
-----------------------------------------------
                                                 <spontaneous>
[15]     0.0    0.01    0.00                 malloc [15]
-----------------------------------------------
                0.00    0.00       3/5294481     main [1]
                0.00    0.00    1926/5294481     newnode [19]
                0.00    0.00    7674/5294481     betweenness [3]
                0.01    0.00 5284878/5294481     walk_all [4]
[16]     0.0    0.01    0.00 5294481         vector_init [16]
-----------------------------------------------
                                                 <spontaneous>
[17]     0.0    0.01    0.00                 freelist [17]
-----------------------------------------------
                                                 <spontaneous>
[18]     0.0    0.01    0.00                 top [18]
-----------------------------------------------
                0.00    0.00    1926/1926        hash_insert [13]
[19]     0.0    0.00    0.00    1926         newnode [19]
                0.00    0.00    3852/20272511     vector_push [10]
                0.00    0.00    1926/5294481     vector_init [16]
-----------------------------------------------
                0.00    0.00       1/1           betweenness [3]
[20]     0.0    0.00    0.00       1         hash_find [20]
                0.00    0.00       1/3963903121     vector_index [7]
                0.00    0.00       1/15243       hash [21]
-----------------------------------------------
                0.00    0.00       1/15243       hash_find [20]
                0.00    0.00   15242/15243       hash_insert [13]
[21]     0.0    0.00    0.00   15243         hash [21]
-----------------------------------------------
                0.00    0.00    1926/1926        betweenness [3]
[22]     0.0    0.00    0.00    1926         debug [22]
-----------------------------------------------
                0.00    0.00    1104/1104        main [1]
[23]     0.0    0.00    0.00    1104         remove_last [23]
-----------------------------------------------
                0.00    0.00   16350/16350       main [1]
[129]    0.0    0.00    0.00   16350         _getline [129]
-----------------------------------------------

   [6] __fentry__             [20] hash_find              [18] top
 [129] _getline               [13] hash_insert             [9] vector_dest
   [8] _mcount_private         [5] isneighbor              [7] vector_index
   [3] betweenness            [12] isneighbor_print       [16] vector_init
   [2] cmd                    [15] malloc                 [10] vector_push
  [22] debug                  [19] newnode                 [4] walk_all
  [17] freelist               [14] node_list_insert       [11] walk_distance
  [21] hash                   [23] remove_last
