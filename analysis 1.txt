Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total
 time   seconds   seconds    calls   s/call   s/call  name
 36.93     40.98    40.98 1778105778     0.00     0.00  isneighbor
 28.24     72.32    31.34  1853775     0.00     0.00  walk_all
 14.34     88.23    15.91                             __fentry__
 10.59     99.98    11.75 3961679999     0.00     0.00  vector_index
  9.11    110.09    10.11                             _mcount_private
  0.60    110.76     0.67  1855703     0.00     0.00  vector_dest
  0.05    110.82     0.06  5423293     0.00     0.00  walk_distance
  0.05    110.88     0.06 20280185     0.00     0.00  vector_push
  0.04    110.92     0.04  5302155     0.00     0.00  vector_init
  0.04    110.96     0.04        1     0.04    84.93  betweenness
  0.01    110.97     0.01    28274     0.00     0.00  node_list_insert
  0.01    110.97     0.01                             isneighbor_print
  0.00    110.98     0.01                             freelist
  0.00    110.98     0.00    16350     0.00     0.00  _getline
  0.00    110.98     0.00    15243     0.00     0.00  hash
  0.00    110.98     0.00    15242     0.00     0.00  hash_insert
  0.00    110.98     0.00     1926     0.00     0.00  debug
  0.00    110.98     0.00     1926     0.00     0.00  newnode
  0.00    110.98     0.00     1104     0.00     0.00  remove_last
  0.00    110.98     0.00        2     0.00    42.47  cmd
  0.00    110.98     0.00        1     0.00     0.00  hash_find

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.01% of 110.98 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     76.5    0.00   84.94                 main [1]
                0.00   84.93       2/2           cmd [2]
                0.00    0.01   15242/15242       hash_insert [13]
                0.00    0.00    1928/1855703     vector_dest [9]
                0.00    0.00       3/5302155     vector_init [12]
                0.00    0.00       1/3961679999     vector_index [7]
                0.00    0.00   16350/16350       _getline [129]
                0.00    0.00    1104/1104        remove_last [21]
-----------------------------------------------
                0.00   84.93       2/2           main [1]
[2]     76.5    0.00   84.93       2         cmd [2]
                0.04   84.89       1/1           betweenness [3]
-----------------------------------------------
                0.04   84.89       1/1           cmd [2]
[3]     76.5    0.04   84.89       1         betweenness [3]
               31.34   52.86 1853775/1853775     walk_all [4]
                0.67    0.00 1853775/1855703     vector_dest [9]
                0.02    0.00 5300228/3961679999     vector_index [7]
                0.01    0.00 3446451/20280185     vector_push [11]
                0.00    0.00       1/1           hash_find [18]
                0.00    0.00    1926/1926        debug [20]
-----------------------------------------------
               31.34   52.86 1853775/1853775     betweenness [3]
[4]     75.9   31.34   52.86 1853775         walk_all [4]
               40.98   10.55 1778105778/1778105778     isneighbor [5]
                1.19    0.00 400093488/3961679999     vector_index [7]
                0.06    0.00 5423293/5423293     walk_distance [10]
                0.05    0.00 16814532/20280185     vector_push [11]
                0.04    0.00 5300226/5302155     vector_init [12]
-----------------------------------------------
               40.98   10.55 1778105778/1778105778     walk_all [4]
[5]     46.4   40.98   10.55 1778105778         isneighbor [5]
               10.55    0.00 3556211556/3961679999     vector_index [7]
-----------------------------------------------
                                                 <spontaneous>
[6]     14.3   15.91    0.00                 __fentry__ [6]
-----------------------------------------------
                0.00    0.00       1/3961679999     hash_find [18]
                0.00    0.00       1/3961679999     main [1]
                0.00    0.00   18177/3961679999     hash_insert [13]
                0.00    0.00   56548/3961679999     node_list_insert [14]
                0.02    0.00 5300228/3961679999     betweenness [3]
                1.19    0.00 400093488/3961679999     walk_all [4]
               10.55    0.00 3556211556/3961679999     isneighbor [5]
[7]     10.6   11.75    0.00 3961679999         vector_index [7]
-----------------------------------------------
                                                 <spontaneous>
[8]      9.1   10.11    0.00                 _mcount_private [8]
-----------------------------------------------
                0.00    0.00    1928/1855703     main [1]
                0.67    0.00 1853775/1855703     betweenness [3]
[9]      0.6    0.67    0.00 1855703         vector_dest [9]
-----------------------------------------------
                0.06    0.00 5423293/5423293     walk_all [4]
[10]     0.1    0.06    0.00 5423293         walk_distance [10]
-----------------------------------------------
                0.00    0.00    3852/20280185     newnode [17]
                0.00    0.00   15350/20280185     node_list_insert [14]
                0.01    0.00 3446451/20280185     betweenness [3]
                0.05    0.00 16814532/20280185     walk_all [4]
[11]     0.0    0.06    0.00 20280185         vector_push [11]
-----------------------------------------------
                0.00    0.00       3/5302155     main [1]
                0.00    0.00    1926/5302155     newnode [17]
                0.04    0.00 5300226/5302155     walk_all [4]
[12]     0.0    0.04    0.00 5302155         vector_init [12]
-----------------------------------------------
                0.00    0.01   15242/15242       main [1]
[13]     0.0    0.00    0.01   15242         hash_insert [13]
                0.01    0.00   28274/28274       node_list_insert [14]
                0.00    0.00   18177/3961679999     vector_index [7]
                0.00    0.00    1926/1926        newnode [17]
                0.00    0.00   15242/15243       hash [19]
-----------------------------------------------
                0.01    0.00   28274/28274       hash_insert [13]
[14]     0.0    0.01    0.00   28274         node_list_insert [14]
                0.00    0.00   56548/3961679999     vector_index [7]
                0.00    0.00   15350/20280185     vector_push [11]
-----------------------------------------------
                                                 <spontaneous>
[15]     0.0    0.01    0.00                 isneighbor_print [15]
-----------------------------------------------
                                                 <spontaneous>
[16]     0.0    0.01    0.00                 freelist [16]
-----------------------------------------------
                0.00    0.00    1926/1926        hash_insert [13]
[17]     0.0    0.00    0.00    1926         newnode [17]
                0.00    0.00    1926/5302155     vector_init [12]
                0.00    0.00    3852/20280185     vector_push [11]
-----------------------------------------------
                0.00    0.00       1/1           betweenness [3]
[18]     0.0    0.00    0.00       1         hash_find [18]
                0.00    0.00       1/3961679999     vector_index [7]
                0.00    0.00       1/15243       hash [19]
-----------------------------------------------
                0.00    0.00       1/15243       hash_find [18]
                0.00    0.00   15242/15243       hash_insert [13]
[19]     0.0    0.00    0.00   15243         hash [19]
-----------------------------------------------
                0.00    0.00    1926/1926        betweenness [3]
[20]     0.0    0.00    0.00    1926         debug [20]
-----------------------------------------------
                0.00    0.00    1104/1104        main [1]
[21]     0.0    0.00    0.00    1104         remove_last [21]
-----------------------------------------------
                0.00    0.00   16350/16350       main [1]
[129]    0.0    0.00    0.00   16350         _getline [129]
-----------------------------------------------

   [6] __fentry__             [19] hash                   [21] remove_last
 [129] _getline               [18] hash_find               [9] vector_dest
   [8] _mcount_private        [13] hash_insert             [7] vector_index
   [3] betweenness             [5] isneighbor             [12] vector_init
   [2] cmd                    [15] isneighbor_print       [11] vector_push
  [20] debug                  [17] newnode                 [4] walk_all
  [16] freelist               [14] node_list_insert       [10] walk_distance
